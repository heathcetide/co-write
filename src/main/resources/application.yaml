cowrite:
  name: CoWrite-Backend
  version: @project.version@  # Maven属性注入
  build-time: "2025-05-26 20:15:23"
  copyright:
    owner: CoWrite Team
    since-year: 2025
    license: MIT
  # 自定义JWT配置
  jwt:
    secret: 6Vvq8$fG3jKlP2mNpQs5tRwUyXzA7B+C9D-E)  # 示例密钥，实际应使用生成的随机字符串
    expiration: 86400000
    header: Authorization
    token-start: Bearer
  #对象存储
  storage:
    type: minio  # 支持 local、minio、cos
    minio-endpoint: http://47.108.177.82:9000
    minio-access-key: W5dV2m1MutQgUS21AlE7
    minio-secret-key: p1qDvEeJN3DlXWmnlQS0k5TWBLcvWBzOujvr1XwZ
    minio-bucket: moxie
    local-base-path: /tmp/uploads
  idempotent:
    expire: 3600
    timeout: 2
  invite:
    base-url: http://localhost:8080/api/org_invite/link/
    font-url: http://localhost:3000/invite
  ssh:
    channel-timeout: 30000
    connection-timeout: 30000
    strictHostKeyChecking: false
    defaultTerminalType: xterm
    defaultCols: 80
    defaultRows: 24
  feature:
    canary: true
    canary-header: X-User-ID    # 可选，默认 X-User-ID
    canary-rate: 10             # 表示 10% 的用户参与灰度

server:
  port: 8080
  servlet:
    context-path:
  compression:
    enabled: true  # 启用压缩
    mime-types: application/java-archive,application/octet-stream  # 对JAR文件压缩
    min-response-size: 1024  # 大于1KB的文件才压缩（避免小文件压缩开销）

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod},security-baseline
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update  # 这里可以使用 'update' 来自动创建表结构
    show-sql: true
  #邮箱
  mail:
    host: smtp.zoho.com
    port: 465
    username: heath-cetide@zohomail.com
    password: CTct288513832##
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
            trust: smtp.zoho.com
    default-encoding: UTF-8
    test-connection: false  # 启动时测试连接

  # redis
  redis:
    host: 139.155.132.244
    port: 26379
    database: 1
    password: 123456

  # RabbitMQ
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}
    listener:
      simple:
        acknowledge-mode: auto
        concurrency: 2
        max-concurrency: 8
        prefetch: 50

  # MongoDB 配置
  data:
    mongodb:
      uri: mongodb://localhost:27017/CoWrite  # 默认本地数据库，数据库名为 cowrite_db


# ORM 配置
mybatis-plus:
  type-handlers-package: com.cowrite.project.common.typehandler
  mapper-locations: classpath*:/mapper/**/*.xml               # Mapper XML 文件路径
  configuration:
    map-underscore-to-camel-case: true                        # 开启驼峰命名自动映射
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl     # 控制台打印 SQL
    lazy-loading-enabled: true
    aggressive-lazy-loading: false
    local-cache-scope: session
    cache-enabled: true
  global-config:
    banner: false                                             # 关闭启动时的 banner
    enable-sql-runner: false                                  # 是否启用 SqlRunner
    db-config:
      table-prefix: hib_                                      # 表前缀映射
      id-type: auto                                           # 主键策略
      logic-delete-value: 1                                   # 逻辑删除值
      logic-not-delete-value: 0                               # 正常值

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always